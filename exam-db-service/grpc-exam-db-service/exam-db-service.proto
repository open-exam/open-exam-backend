syntax = "proto3";

option go_package = "github.com/open-exam/open-exam-backend/exam-db-service/grpc-exam-db-service;grpc_exam_db_service";

import "shared.proto";

service ExamClientAccess {
    rpc checkValid (CheckValidRequest) returns (CheckValidResponse) {};
    rpc expireKeys (ExpireKeysRequest) returns (StandardStatusResponse) {};
    rpc batchAddKeys (stream BatchAddKeysRequest) returns (StandardStatusResponse) {};
}

service ExamService {
    rpc createExam (CreateExamRequest) returns (StandardIdResponse) {};
}

service ExamTemplate {
    rpc createTemplate (CreateExamTemplateRequest) returns (StandardIdResponse) {};
    rpc validateTemplate (StandardIdRequest) returns (StandardStatusResponse) {};
}

message CheckValidRequest {
    string id = 1;
}

message CheckValidResponse {
    bool status = 1;
    string userId = 2;
    string examId = 3;
    int64 open_at = 4;
    int64 closes_at = 5;
}

message ExpireKeysRequest {
    string examId = 1;
    uint64 expireTime = 2;
}

message BatchAddKeysRequest {
    string userId = 1;
    string examId = 2;
    uint64 expireTime = 3;
}

message CreateExamRequest {
    string name = 1;
    uint64 startTime = 2;
    uint64 endTime = 3;
    uint32 duration = 4;
    string createdBy = 5;
    uint64 organization = 6;
    string template = 7;
    repeated Scope scopes = 8;
}

message CreateExamTemplateRequest {
    string name = 1;
    repeated Scope scopes = 2;
}

message Scope {
    uint64 scope = 1;
    uint32 scopeType = 2;
}